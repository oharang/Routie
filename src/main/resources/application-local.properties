server.port=8083

spring.jpa.hibernate.ddl-auto=create
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.id.new_generator_mappings=true

error.handling.http-status-in-json-response=true
error.handling.exception-logging=NO_LOGGING
error.handling.full-stacktrace-http-statuses=5xx
error.handling.log-levels.5xx=ERROR
error.handling.codes.MemberEmailUnique=MEMBER_EMAIL_UNIQUE
error.handling.codes.MemberNicknameUnique=MEMBER_NICKNAME_UNIQUE
error.handling.codes.MemberMemberImageUnique=MEMBER_MEMBER_IMAGE_UNIQUE
error.handling.codes.MemberNotificationUnique=MEMBER_NOTIFICATION_UNIQUE

# Import .env file
spring.config.import = optional:file:.env[.properties]

# app server
app.domain=https://localhost:8083

# front server
front-server.prod-domain=https://littlestep-gcc-final.vercel.app/
front-server.local-domain=http://localhost:3000

# data init
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# supabase
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.connection-timeout=30000

# redis
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.username=default
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.ssl.enabled=false

# jwt
jwt.secret=${JWT_SECRET}
jwt.expiration=3600000
jwt.refresh-expiration=604800000

# smtp
spring.mail.host=smtp.gmail.com
spring.mail.username=${EMAIL_NAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Kakao OAuth2
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_ID}
spring.security.oauth2.client.registration.kakao.redirect-uri=${KAKAO_REDIRECT_URI}
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname, account_email

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile, email

#gemini
langchain4j.google-ai-gemini.chat-model.api-key=${GEMINI-API-KEY}
langchain4j.google-ai-gemini.chat-model.model-name=gemini-2.0-flash
langchain4j.google-ai-gemini.chat-model.log-requests-and-responses=true